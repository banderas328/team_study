<?php

/**
 * ********   Сортировка произвольных массивов   ***********

    SORT_REGULAR - обычное сравнение
    SORT_NUMERIC - сравнение как цифра
    SORT_STRING - сравнение как строка
 */

$A = [
    'a' => "Zero",
    'b' => "Weapon",
    'c' => "Alpha",
    'd' => "Processor",
];
//По значениям, по возрастанию
asort($A);

//По значениям, по убыванию
arsort($A);

//По ключам, по возрастанию
ksort($A);

//По ключам, по убыванию
krsort($A);

/**
 * *****  Естественная сортировка   *******
 */

$files = [
    'img10.gif',
    'img1.gif',
    'img2.gif',
    'img20.gif',
];

natsort($files);
print_r($files);//Array ( [1] => img1.gif [2] => img2.gif [0] => img10.gif [3] => img20.gif )


//Сортировка списков
//sort(), rsort()

//многомерные массивы
//array_multisort();

//перемешивание списка
//shuffle();

//меняет местами ключ-значение
//array_flip();

//количество раз каждого значения
//array_count_values();

$L1 = [10, 20, 30, 400];
$L2 = [100, 200, 300, 400];
$L = array_merge($L1, $L2);
$L3 = $L1 + $L2;
print_r($L);

//Добавляет один или несколько элементов в начало массива
//array_unshift();

//извлекает последний элемент массива
//array_pop();

//извлекает первый элемент массива
//array_shift();

//пересечение
//array_intersect();

//разность
//array_diff();

